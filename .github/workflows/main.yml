name: madness-portfolio CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

#  workflow_dispatch:            # Permet d'excuter la ci manuellement

#  schedule:
#    - cron: "10 14 * * 1-5" # Afternoon 2:10, Monday to Friday

#permissions:
#  contents:  read               # give read permission to the ci for the repository access


concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true   # Évite les builds inutiles → bonne pratique RSE

jobs:

  Build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        # Récupère le code source

      - name: Set up Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
        # Configure Node.js v22 et active le cache npm (optimisation RSE)

      - name: Upgrade to npm v11
        run: npm install -g npm@11
        # Met à jour npm à la dernière version stable

      - name: Install dependencies
        run: npm ci
        # Installe les dépendances (rapide et reproductible)

      - name: Build project (Vite)
        run: npm run build        # Compile ton projet pour la production

        #  Store Artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: madness-portfolio
#          path: target/*.war

#     Status check functions : by default it's success
#      - name: Notify if Build Fails
#        if: failure()
#        run: echo "Build job failde! Please check logs."


  Testing:
    runs-on: ubuntu-latest
    needs: Build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Upgrade to npm v11
        run: npm install -g npm@11

      - name: Install dependencies
        run: npm ci

#      - name: Run unit tests
#        run: npm test
        # Exécute tes tests unitaires (ex: Jest, Vitest)

      - name: Run linting (Code quality)
        run: npm run lint
        # Vérifie la qualité du code → maintenabilité (bonne pratique dev)

      - name: Accessibility tests (a11y)
        run: npx pa11y http://localhost:4173 || true
        # Vérifie l’accessibilité → inclusion utilisateur


#      - name: Run tests on other branches
#        if: github.ref != 'refs/heads/main'     # run only if we are on the main branch
#        run: echo "Skipping unit tests and code analysis"


  Performance:
    runs-on: ubuntu-latest
    needs: Build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Upgrade to npm v11
        run: npm install -g npm@11

      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli

#      - name: Run Lighthouse CI
#        run: lhci autorun
        # Analyse performance, accessibilité, SEO et bonnes pratiques


  Security_scan:
    runs-on: ubuntu-latest
    needs: Build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'json'
          exit-code: 0
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          output: 'trivy-results.json'

      #  Store Artifact
      - name: Upload Trivy scan results as artifact
        uses: actions/upload-artifact@v4
        with:
          name: trivy-scan-results
          path: trivy-results.json